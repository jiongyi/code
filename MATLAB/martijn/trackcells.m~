function [CellStats, isCellCell, cadherinStack] = trackcells(corrThreshold)
% Select files.
[cadherinFileNameStr, folderNameStr] = uigetfile('*.tif', ...
    'Select cadherin TIF');
nucleusFileNameStr = uigetfile('*.tif', ...
    'Select nucleus TIF', folderNameStr);
% Load files.
cadherinStack = imstack([folderNameStr, cadherinFileNameStr]);
nucleusStack = imstack([folderNameStr, nucleusFileNameStr]);
% Generate regional maxima mask based on nuclear stain.
noFrames = size(cadherinStack, 3);
isCellCell = cell(1, noFrames);
CellStats = cell(1, noFrames);
labeledCell = cell(1, noFrames);
for iFrame = 1 : size(cadherinStack, 3);
    isRegMaxIm = maskregionalmax(nucleusStack(:, :, iFrame), 3);
    isCellCell{iFrame} = markerwatershed(cadherinStack(:, :, iFrame), ...
        2, isRegMaxIm);
    labeledCell{iFrame} = bwlabel(isCellCell{iFrame});
    CellStats{iFrame} = regionprops(isCellCell{iFrame}, ...
        cadherinStack(:, :, iFrame), ...
        'BoundingBox', 'Orientation', 'WeightedCentroid');
end

id
for iCell = 1 : noCells
    templateIm = imcrop(cadherinStack(:, :, 1), ...
        CellStats{1}(iCell).BoundingBox);
    for iFrame = 1 : (noFrames - 1)
        nextFrame = cadherinStack(:, :, iFrame + 1);
        [corrScore, boundingBox] = corrMatching(templateIm, nextFrame, 0);
        if corrScore >= corrThreshold
            matchIm = imcrop(nextLabeledFrame, boundingBox);
            idxNext = mode(matchIm(:));

    end
end
